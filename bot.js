require('dotenv').config();
const { Telegraf } = require('telegraf');
const Parser = require('rss-parser');

const bot = new Telegraf(process.env.NEWSBOT_TOKEN);
const parser = new Parser();

// –°–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
const RSS_FEEDS = {
	'–†–ò–ê –ù–æ–≤–æ—Å—Ç–∏': 'https://ria.ru/export/rss2/archive/index.xml',
	'–†–ë–ö': 'https://rssexport.rbc.ru/rbcnews/news/30/full.rss',
	'–¢–ê–°–°': 'https://tass.ru/rss/v2.xml',
	'–õ–µ–Ω—Ç–∞.—Ä—É': 'https://lenta.ru/rss/news',
	'–ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç—ä': 'https://www.kommersant.ru/RSS/news.xml'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
async function getAllNews() {
	let news = [];

	for (const [source, url] of Object.entries(RSS_FEEDS)) {
		try {
			const feed = await parser.parseURL(url);
			const articles = feed.items.slice(0, 2).map(item => `üìå *${source}*\n${item.title}\n${item.link}`);
			news.push(...articles);
		} catch (error) {
			console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${source}:`, error.message);
		}
	}

	return news.length > 0 ? news.join("\n\n") : "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.";
}

// –ö–æ–º–∞–Ω–¥–∞ /news –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
bot.command('news', async (ctx) => {
	ctx.reply('‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏...');
	try {
		const news = await getAllNews();
		ctx.replyWithMarkdown(news);
	} catch (error) {
		ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π.');
	}
});

bot.start((ctx) => ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π /news, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏.'));

bot.launch();
console.log('üì∞ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
